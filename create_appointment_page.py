from selenium.webdriver.common.by import By


class LocatorsCreateAppointmentPage(object):
    def __init__(self, context=None):
        self.create_appointment_btn = (By.XPATH, "//span[normalize-space()='Create Appointment']")
        self.create_appointment_page = (By.XPATH, "//div[@class='px-3 space-y-4']")
        self.billmax_user_number = (By.XPATH, "//input[contains(@class,'MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputSizeSmall')]")
        self.get_user_btn = (By.CSS_SELECTOR, "button[type='submit']")
        self.new_appointment_btn = (By.XPATH, "//button[@id='newapp']")
        self.edit_existing_btn = (By.XPATH, "//button[text()='Edit Existing']")
        self.subscriber_info = (By.XPATH, "//p[normalize-space()='Subscriber Info']")
        self.customer_packages = (By.XPATH, "(//button[normalize-space()='Customer Packages/Services'])[1]")
        self.toggle_btn = (By.XPATH, "//div[@class='relative']//div[2]")
        self.toggle_dark_theme = (By.XPATH, "(//*[name()='svg'][@class='MuiSvgIcon-root MuiSvgIcon-fontSizeMedium h-5 "
                                            "w-5 css-vubbuv'])[2]")
        self.primary_service_type = (By.ID, 'work_type')
        self.list_box = (By.CSS_SELECTOR, "ul[role='listbox']")
        self.equipment_removal_option = (By.XPATH, "//li[normalize-space()='Equipment Removal']")
        self.secondary_service_type = (By.ID, 'sec_servicetype')
        self.standard_option = (By.XPATH, "//li[contains(text(),'Standard')]")
        self.FTTX_option = (By.XPATH, "//li[contains(text(),'FTTX')]")
        self.installation_option = (By.XPATH, "//li[normalize-space()='Installation']")
        self.modification_option = (By.XPATH, "//li[normalize-space()='Modification']")
        self.service_call_option = (By.XPATH, "//li[normalize-space()='Service Call']")
        #self.job_items_btn = (By.CSS_SELECTOR, "#mui-component-select-jobType")
        self.job_items_btn = (By.XPATH, '//div[@id = "jobtype"]')
        self.mesh_unit_quantity = (By.XPATH, "//input[@name='qtymeshunit']")
        self.p2p_client_quantity = (By.XPATH, "//input[@name='qtyp2pclient']")
        self.schedule_appointment_btn = (By.ID, "schapp")

        self.mesh_unit_option = (By.XPATH, "//span[normalize-space()='Mesh Unit']")
        self.p2p_client_option = (By.XPATH, "//span[normalize-space()='P2P Client']")
        self.mount = (By.XPATH, "//span[normalize-space()='Mount']")
        self.Inground = (By.XPATH, "//span[normalize-space()='Inground']")
        self.job_item_back_btn = (By.XPATH, "//div[contains(@class,'MuiBackdrop-root MuiBackdrop-invisible')]")
        self.install_lte = (By.XPATH, "//span[normalize-space()='Install LTE']")
        self.future_date_needed_yes_option = (By.XPATH, "(//span[contains(@class,'MuiRadio-root MuiRadio-colorPrimary')])[1]")
        self.future_date_needed = (By.XPATH, "//div[@class='MuiFormControl-root flex items-center flex-row css-13sljp9']")
        self.future_date_selector = (By.XPATH, "//div[contains(@class,'MuiInputBase-root MuiOutlinedInput-root MuiInputBase-colorPrimary Mui-error MuiInputBase-formControl MuiInputBase-ado')]")
        self.date_selector = (By.XPATH, "//input[starts-with(@class, 'MuiInputBase-input MuiInput-input MuiInputBase-inputSizeSmall MuiInputBase-inputAdornedEnd')]")
        self.date_option = (By.XPATH, "//button[contains(@class,'MuiButtonBase-root MuiIconButton-root MuiIconButton-edgeEnd')]")
        self.next_month = (By.XPATH, "//button[@title='Next month']")
        self.calendar_date = (By.XPATH, "(//button[contains(@class,'MuiButtonBase-root MuiPickersDay-root')])[7]")
        self.edit_existing_list = (By.XPATH, "//div[@role='dialog']")
        self.edit_existing_list_btn = (By.XPATH, "(//div[@role='button'])[12]")
        self.fiber_bury_btn = (By.XPATH, "//span[normalize-space()='Fiber Bury']")
        self.mount_btn = (By.XPATH, "//span[normalize-space()='Mount']")
        self.onsite_ground_btn = (By.XPATH, "//span[normalize-space()='Onsite Ground']")
        self.grounding_btn = (By.XPATH, "//span[normalize-space()='Grounding']")
        self.upgrade_lte_quantity = (By.XPATH, "//input[@name='qtyupgradelte']")
        self.select_all_job_item = (By.XPATH, "//span[normalize-space()='Select All']")
        self.p2p_ap_quantity = (By.XPATH, "//input[@name='qtyp2pap']")
        self.router_quanity = (By.XPATH, "//input[@name='qtyrouter']")
        self.unifi_quantity = (By.XPATH, "//input[@name='qtyunifi']")
        self.upgrade_quantity = (By.XPATH, "//input[@name='qtyupgrade']")
        self.voip_quantity = (By.XPATH, "//input[@name='qtyvoip']")
        self.cable_drop_quantity = (By.XPATH, "//input[@name='qtycabledrop']")
        self.error_message = (By.CSS_SELECTOR, "body > div:nth-child(1) > main:nth-child(2) > div:nth-child(3) > div:nth-child(2) > div:nth-child(2) > div:nth-child(2) > p:nth-child(2)")
        self.schedule_appointment_block = (By.XPATH, "(//div[contains(@class,'MuiPaper-root MuiPaper-elevation MuiPaper-rounded')])[3]")
        self.optional_supervisor = (By.ID, "optionalSupervisor")
        self.optional_supervisor_name = (By.XPATH, "//li[normalize-space()='Blake Crawford']")
        self.tower = (By.XPATH, "//li[normalize-space()='Tower']")
        self.override_availability_btn = (By.XPATH, "//button[normalize-space()='Override Availability']")
        self.override_availability_date = (By.XPATH, "//input[@name='date']")
        self.am_availability = (By.XPATH, "//button[normalize-space()='8-12 AM']")
        self.avail_techs = (By.CSS_SELECTOR, "div:nth-child(2) > div:nth-child(2) > form:nth-child(5) > div:nth-child(3) > div:nth-child(2) > div:nth-child(1)")
        self.avail_techs_name = (By.XPATH, "//li[normalize-space()='Tylar Holliday']")
        self.overbook_btn = (By.XPATH, "//button[normalize-space()='Overbook']")
        self.option = (By.XPATH, "//li[@role='option']")
        self.bucket_truck = (By.XPATH, "//li[normalize-space()='Bucket Truck']")
        self.non_penetrating_mount = (By.XPATH, "//li[normalize-space()='Non-Penetrating Mount']")
        self.router = (By.XPATH, "//span[normalize-space()='Router']")
        self.user_name = (By.XPATH,
                          "(//h5[@class='MuiTypography-root MuiTypography-h5 mt-2 mb-2 flex items-center css-1pw1kd1'])[1]")
        self.user_billmax_number = (By.XPATH, "(//h6[normalize-space()='290262'])[1]")
        self.accnt_nmber = (By.XPATH, "(//h6[normalize-space()='125277772'])[1]")
        self.usr_phne = (By.XPATH, "//span[normalize-space()='817-555-1212']")
        self.email = (By.XPATH, "//h6[normalize-space()='jenabangan@yahoo.com']")
        self.address = (By.XPATH, "(//span[contains(text(),'10923 SW New Hope Rd')])[1]")
        self.caf = (By.XPATH, "//div[@aria-hidden='false']//div[2]//div[1]")
        self.hub = (By.XPATH, "//div[@id='appform']//div[2]//div[2]")
        self.lat = (By.XPATH, "//div[@id='appform']//div[2]//div[3]")
        self.long = (By.XPATH, "//div[@id='appform']//div[2]//div[4]")
        self.ap = (By.XPATH, "//div[@id='appform']//div[2]//div[5]")
        self.pop = (By.XPATH, "//div[@id='appform']//div[2]//div[6]")
        self.zone = (By.XPATH, "//div[@id='appform']//div[2]//div[7]")
        self.package_heading = (By.XPATH, "//th[normalize-space()='Package or Service']")
        self.servicename_heading = (By.XPATH, "//th[normalize-space()='Service Name']")
        self.plan_heading = (By.XPATH, "//th[normalize-space()='Plan(d01)']")
        self.price_heading = (By.XPATH, "//th[normalize-space()='Price']")
        self.status_heading = (By.XPATH, "//th[normalize-space()='Status']")
        self.cpe = (By.XPATH, "//th[normalize-space()='CPE Mount Type']")
        self.plan_03 = (By.XPATH, "//th[normalize-space()='Plan(d03)']")
        self.primary_service_label = (By.XPATH, "//p[normalize-space()='Primary Service Type']")
        self.secondary_service_label = (By.XPATH, "//p[normalize-space()='Secondary Service Type']")
        self.job_items_label = (By.XPATH, "//p[normalize-space()='Job Items']")
        self.future_date_needed_label = (By.XPATH, "(//p[@id='demo-row-radio-buttons-group-label'])[1]")
        self.same_day_label = (By.XPATH, "//*[text()='Same Day']")
        self.standard_modification = (By.XPATH, "//li[normalize-space()='Standard Modification']")
        self.tower = (By.XPATH, "//li[normalize-space()='Tower']")
        self.grounding_modification = (By.XPATH, "//span[normalize-space()='Grounding']")
        self.standard_installation = (By.XPATH, "//li[normalize-space()='Standard Install']")
        self.standard_eqpmnt_rmvll = (By.XPATH, "//li[normalize-space()='Standard Equipment Removal']")
        self.equipment_rmve_all = (By.XPATH, "//span[normalize-space()='Remove All']")
        self.job_types_input = (By.ID, 'jobtype')
        self.standard_srvc = (By.XPATH, "//li[normalize-space()='Standard Service Call']")
        self.srvc_degration = (By.XPATH, "//span[normalize-space()='Degradation']")
        self.get_availability_btn = (By.XPATH, "//button[@id='getavlbtn']")
        self.cable_drop_no = (By.XPATH, "//button[@id='cbldrpno']")
        self.points = (By.XPATH, "//p[contains(text(), 'Points')]")
        self.available_apptmnt = (By.XPATH, "//p[normalize-space()='Available Appointments']")
        self.appointment_date = (By.XPATH, "//li[@class = 'MuiButtonBase-root MuiMenuItem-root MuiMenuItem-gutters MuiMenuItem-root MuiMenuItem-gutters css-1u994e5'][1]")
        self.edit_rqsted = (By.XPATH, "//button[@id='editavlbtn']")
        self.availability_input = (By.ID, "availability")
        self.available_apptmntButton= (By.XPATH,'//div[@id = "availability"]')
        self.appointment_toast = (By.XPATH, "//div[contains(text(),'Appointment date is confirmed')]")
        self.appointmnt_dtls_heading =  (By.XPATH, "//h4[normalize-space()='Appointment Details']")
        self.bounty_label = (By.XPATH, "//p[normalize-space()='Bounty']")
        self.sooner_rqstd_label = (By.XPATH, "(//p[@id='demo-row-radio-buttons-group-label'])[2]")
        self.gate_code_label = (By.XPATH, "//p[normalize-space()='Does customer have a gate code?']")
        self.tech_notes_heading = (By.XPATH, "//p[normalize-space()='Technician Notes']")
        self.tech_notes_input = (By.XPATH, "//div[@class='ql-editor ql-blank']//p")
        self.attachments_heading = (By.XPATH, "//div[@id='att-text']")
        self.add_attachments_btn = (By.XPATH, "/html[1]/body[1]/div[1]/main[1]/div[1]/div[2]/div[5]/form[1]/div[4]/div[1]/p[1]/button[1]/*[name()='svg'][1]")
        self.finalize_btn = (By.ID, "finalisebtn")
        self.upload_btn = (By.XPATH, "//button[@id='upl-btn']")
        self.done_btn = (By.XPATH, "//button[@id='cancel-upl-btn']")
        self.browse_files = (By.XPATH, "//input[@type='file']")
        self.attachments_added_ver = \
            (By.XPATH, "//a[contains(@href, 'nextlink-internet.png?X-Goog-Algorithm')]")
        self.confirmation_appointments_modal = (By.XPATH,
                                                "(//h2[normalize-space()='Appointment Created Successfully'])[1]")
        self.subscriber_info_tab = (By.XPATH, "//button[@id='sinfotab']")
        self.package_tab = (By.XPATH, "//button[@id='pandstab']")
        self.appointment_info_heading = (By.XPATH, "//h6[normalize-space()='Appointment Information']")
        self.prim_service = (By.XPATH, "/html[1]/body[1]/div[2]/div[3]/div[1]/div[1]/div[2]/div[1]/div[1]/span[1]")
        self.sec_service = (By.XPATH, "/html[1]/body[1]/div[2]/div[3]/div[1]/div[1]/div[2]/div[1]/div[2]/span[1]")
        self.date_of_appointment = (By.XPATH, "/html[1]/body[1]/div[2]/div[3]/div[1]/div[1]/div[2]/div[1]/div[3]/span[1]")
        self.done = (By.XPATH, "//button[@id='confirm-app-btn']")










